<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_bowser</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-1</depth>
  <persistent>0</persistent>
  <parentName>obj_deactenemyparent</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///The "all-mighty" King Koopa

/*
//  This object uses creation code
//
//      hammer = To make bowser throw hammers
*/

//Default variables
hammer = 0;
rounds = 8;

//How vulnerable is this enemy to various items?
vulnerable = 0;

//How vulnerable is this enemy to the player?
stomp = 1;

//How many points should the enemy give when killed with an item
handicap = 8;
handicap_stomp = 0;

//Palette
palette_index = noone;

//Facing direction
xscale = 1;

//Hits
hits = 5;

//Whether bowser is in lava
inlava = 0;

//Whether bowser is jumping
jumping = 0;

//Display 'Hurt' sprite for a moment
cooldown = 0;

//Animate
image_speed = 0.1;

//Start moving
alarm[10] = 2;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="10">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Move towards the player

//Inherit event
event_inherited();

//Make him jump
alarm[0] = 60;

//Make him breath fire
alarm[1] = 300;

//Make him throw hammers
if (hammer == 1)
    alarm[4] = 60;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="4">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Throw a given amount of hammers

//If bowser can still throw hammers
if (rounds &gt; 0) {

    //If facing left
    if (xscale == -1) {
    
        //Play 'Hammer' sound
        audio_play_sound(snd_hammer, 0, false);
        
        //Decrement hammer
        rounds--;
        
        //Create hammer
        with (instance_create(x, bbox_top-8, obj_hammer)) {

            hspeed = -1;
            image_xscale = -1;
        }
        
        //Toss another hammer
        alarm[4] = 4+random(4);
    }
    
    //Otherwise, wait
    else
        alarm[4] = 1;
}

//Otherwise, recharge
else if (rounds == 0) {

    //Throw another bunch of hammers.
    rounds = 6;
    
    //Throw them again
    alarm[4] = 120;    
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="3">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Stop breathing fire

//Set default sprite
sprite_index = spr_bowser;

//Animate
image_speed = 0.1;
image_index = 0;

//Breathe fire again.
alarm[1] = 60+random(30);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Breathe fire

//Create fire
instance_create(x-16, y-15, obj_bowser_flame);

//Set the animation
image_speed = 0;
image_index = 1;

//Return to normal
alarm[3] = 36;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Make bowser breathe fire if looking at the left

//If facing left
if (xscale == -1) {

    //Set the breathing sprite
    sprite_index = spr_bowser_breathe;
    
    //Animate
    image_speed = 0;
    image_index = 0;
    
    //Breathe fire
    alarm[2] = 30;
}
else
    alarm[1] = 1;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Make bowser jump if he is looking to the left

//If facing left
if (xscale == -1) {

    //If in ground
    if (jumping == 0) {
    
        //Hop
        vspeed = -2.5;
        
        //Jump
        jumping = 1;
        
        //Move up
        y--;
    }
}
else
    alarm[0] = 1;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Bowser logic

//If the player dies, stop everything
if (instance_exists(obj_player_dead)) {

    scr_freeze();
    exit;
}

//If the axe exists
if (instance_exists(obj_axe)) {

    //If the axe is visible
    if (obj_axe.visible == true) {
    
        //If the player does exist and it's at the left
        if (!instance_exists(obj_playerparent)) 
        || (obj_playerparent.x &lt; x) {
        
            hspeed = -0.5;
            xscale = -1;
            if (x &lt; xstart-96)
                x = xstart-96;
        }
        
        //Otherwise, if the player is at the right
        else {
        
            //If bowser is not breathing fire
            if (sprite_index == spr_bowser) {
            
                hspeed = 0.5;
                xscale = 1;
                if (x &gt; obj_axe.x-16)
                    x = obj_axe.x-16;
            }
            else
                hspeed = 0;
        }
        
        //Inherit event
        event_inherited();
        
        //Set gravity when not jumping
        if (gravity &gt; 0)
            gravity = 0.075;
            
        //Otherwise
        else {
        
            if (jumping == 1) {
            
                jumping = 0;
                alarm[0] = 90;
            }
        }
    }
    
    //Otherwise, if the axe is not visible
    else {
    
        //Set the sprite
        sprite_index = spr_bowser_dead;
        
        //Animate
        image_speed = 0.2;
    
        //If there's still a bridge
        if (instance_number(obj_bridge) &gt; 0) {
                
            //Stop movement
            speed = 0;
            gravity = 0;
            
            //Look to the right
            xscale = 1;
        }
        
        //Otherwise, fall down to the lava pit
        else {
        
            //Set the gravity
            gravity = 0.075;
            
            //Check for lava
            var lava = collision_rectangle(bbox_left, bbox_top, bbox_right, bbox_bottom, obj_lava, 0, 0);
            
            //If there's lava
            if (lava)
            &amp;&amp; (vspeed &gt; 0.75) {
            
                //Set the vertical speed
                vspeed = 0.75;    
                
                //If not inside lava
                if (inlava == 0) {
                
                    //Inside lava
                    inlava = 1;
                    
                    //Create lava splash
                    with (instance_create(x-8,lava.bbox_top-12,obj_smoke)) {
                    
                        sprite_index = spr_lavasplash;
                        image_speed = 0.3;
                    }                    
                }            
            }          
        }
    }
}

//Cooldown hurt
if (cooldown &gt; 0)
    cooldown--;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Draw bowser

if (cooldown &gt; 0)
    draw_sprite_ext(spr_bowser_dead, -1, round(x), y, xscale, 1, 0, c_white, 1);
else
    draw_sprite_ext(sprite_index, -1, round(x), y, xscale, 1, 0, c_white, 1);
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
